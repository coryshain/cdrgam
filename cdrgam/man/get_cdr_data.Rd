% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/data.R
\name{get_cdr_data}
\alias{get_cdr_data}
\title{Get CDR data for GAM fitting}
\usage{
get_cdr_data(
  X,
  Y,
  response_name,
  predictor_names,
  series_ids = NULL,
  ranef_names = NULL,
  ranef_levels = NULL,
  history_length = 16,
  future_length = 0,
  t_delta_cutoff = NULL,
  time_col = "time",
  t_delta_col = "t_delta",
  mask_col = "mask",
  verbose = TRUE
)
}
\arguments{
\item{X}{A data.frame with M rows. Must contain a column matching \code{time_col}
representing timestamps.}

\item{Y}{A data.frame with N rows. Must contain a column matching \code{time_col}
representing timestamps.}

\item{response_name}{A string specifying the column name of \code{Y} that
contains the response (dependent) variable.}

\item{predictor_names}{A character vector of column names in \code{X} that
contain the predictor (independent) variables.}

\item{series_ids}{A character vector of column names in \code{X} and \code{Y}
that identify series groups (a series group is a sequence of
observations that forms a contiguous time series). If NULL, all rows
are treated as a single series.}

\item{ranef_names}{A character vector of column names in \code{X} and \code{Y} that
contain random grouping factors. If NULL, no random grouping factors
are included in the dataset.}

\item{ranef_levels}{A character vector of factor levels to use for
constructing random grouping factors. If NULL, factor levels are
inferred automatically. IMPORTANT: This parameter is strongly
encouraged for prediction datasets to ensure that factor levels are
matched to the model. Otherwise, predictions may be incorrect.}

\item{history_length}{An integer specifying the number of rows in \code{X}
to include in the history (backward) window for each row in \code{Y}.}

\item{future_length}{An integer specifying the number of rows in \code{X}
to include in the future (forward) window for each row in \code{Y}.}

\item{t_delta_cutoff}{An integer specifying the maximum time difference
between the start/end of a window and the timestamp of the corresponding
row in \code{Y}. If NULL, no cutoff is applied.}

\item{time_col}{A string specifying the column name in \code{X} and \code{Y} that
contains timestamps.}

\item{t_delta_col}{A string specifying the name to assign to the column
containing the difference in time between impulses and response.}

\item{mask_col}{A string specifying the name to assign to the column
containing the mask over valid timepoints.}

\item{verbose}{A logical indicating whether to print progress messages.}
}
\value{
A list containing matrix-valued (NxT, where T represents
\code{history_length}+\code{future_length} and N represents the number of rows in Y),
windowed representations of each predictor in the input data, along with
three special matrix-valued variables of the same dimensionality:
\itemize{
\item \code{time_col}: The timestamp of each observation in the window.
\item \code{t_delta_col}: The time difference between the timestamp of each
observation in the window and the timestamp of the corresponding
row in \code{Y}.
\item \code{mask_col}: A binary mask indicating whether each observation in the
window is valid (1) or invalid (0). An observation is invalid if
the time difference between the timestamp of the observation and
the timestamp of the corresponding row in \code{Y} exceeds \code{t_delta_cutoff},
or if the observation is outside the bounds of the input data.
This list can be supplied directly to the \code{data} argument of the
\code{mgcv::gam()} (and related) functions.
}
}
\description{
Transform data frames of impulses/predictors \code{X} and responses \code{Y}
into the input format needed by a CDR-GAM model. This function should
be applied to both training data and held-out evaluation data before
passing either to the model. An important nuance is that held-out data
must be constructed using the same vector of factor levels as that used
for training, for all categorical variables in the model. Otherwise,
predictions will be incorrect unless all factors in both datasets
contain the same unique levels in the same sequence. To support this
constraint, the function allows the user to provide a vector of
factor levels for use in constructing factor-valued variables
(random grouping factors). These factor levels can be obtained
from a fitted model by calling \code{levels(model$var.summary[[factor]])}
and then supplied to this function to construct a new dataset for
prediction from the fitted model.
}
