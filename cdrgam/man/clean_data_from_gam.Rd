% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{clean_data_from_gam}
\alias{clean_data_from_gam}
\title{Clean data from a GAM object}
\usage{
clean_data_from_gam(m, keep_model = FALSE)
}
\arguments{
\item{m}{A GAM object}

\item{keep_model}{A logical value indicating whether to keep
the main model matrix in the object. If \code{FALSE}, the
\code{model} field of the GAM object will be removed, resulting
in significant additional savings but breaking some
native \code{mgcv} functionality like plotting or prediction
without supplying a dataset.}
}
\description{
Clean data from a GAM object by removing model matrices
(training data) that \code{mgcv} automatically stores in the
object alongside the model itself.
}
\details{
GAMs fitted by \code{mgcv} store all data involved in fitting
the model, including copies of transformed data associated
with smooth terms. Since CDR-GAMs are fitted using
(potentially very large and redundant) matrices of data
lagged over time, this can result in huge filesizes when
saving in the standard way. Removing this data can yield
large (orders-of-magnitude) reductions in object size
both in memory and on disk.

This function removes the stored training data
while keeping the model object itself and its fitted
values intact. How much savings this provides depends on
the \code{keep_model} feature, which governs whether the main
model matrix is retained (\code{keep_model=TRUE}). Keeping the
model preserves most (all?) native \code{mgcv} functionality,
including prediction using \code{predict(m, newdata=NULL)} and
native \code{mgcv} plotting functions. However, the main model
matrix is still potentially quite large. Using
\code{keep_model=FALSE} further reduces the object size at the
cost of breaking all native \code{mgcv} functionality that
depends on access to the model matrix (including the
prediction and plotting functions mentioned above). This
is usually not a problem because \code{cdrgam} provides its
own prediction and plotting functions, which do not
rely on the model matrix.
}
